{"ast":null,"code":"import { getBody } from './getBody.js';\nimport { setFakeBody } from './setFakeBody.js';\nimport { resetFakeBody } from './resetFakeBody.js';\nexport function has3DTransforms(tf) {\n  if (!tf) {\n    return false;\n  }\n\n  if (!window.getComputedStyle) {\n    return false;\n  }\n\n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      el = doc.createElement('p'),\n      has3d,\n      cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n  cssTF += 'transform'; // Add it to the body to get the computed style\n\n  body.insertBefore(el, null);\n  el.style[tf] = 'translate3d(1px,1px,1px)';\n  has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n  body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n  return has3d !== undefined && has3d.length > 0 && has3d !== \"none\";\n}","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/ProjetoDotDigital/ProjetoReact/projeto-react/node_modules/tiny-slider/src/helpers/has3DTransforms.js"],"names":["getBody","setFakeBody","resetFakeBody","has3DTransforms","tf","window","getComputedStyle","doc","document","body","docOverflow","el","createElement","has3d","cssTF","length","slice","toLowerCase","insertBefore","style","getPropertyValue","fake","remove","undefined"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAA4B;AACjC,MAAI,CAACA,EAAL,EAAS;AAAE,WAAO,KAAP;AAAe;;AAC1B,MAAI,CAACC,MAAM,CAACC,gBAAZ,EAA8B;AAAE,WAAO,KAAP;AAAe;;AAE/C,MAAIC,GAAG,GAAGC,QAAV;AAAA,MACIC,IAAI,GAAGT,OAAO,EADlB;AAAA,MAEIU,WAAW,GAAGT,WAAW,CAACQ,IAAD,CAF7B;AAAA,MAGIE,EAAE,GAAGJ,GAAG,CAACK,aAAJ,CAAkB,GAAlB,CAHT;AAAA,MAIIC,KAJJ;AAAA,MAKIC,KAAK,GAAGV,EAAE,CAACW,MAAH,GAAY,CAAZ,GAAgB,MAAMX,EAAE,CAACY,KAAH,CAAS,CAAT,EAAY,CAAC,CAAb,EAAgBC,WAAhB,EAAN,GAAsC,GAAtD,GAA4D,EALxE;AAOAH,EAAAA,KAAK,IAAI,WAAT,CAXiC,CAajC;;AACAL,EAAAA,IAAI,CAACS,YAAL,CAAkBP,EAAlB,EAAsB,IAAtB;AAEAA,EAAAA,EAAE,CAACQ,KAAH,CAASf,EAAT,IAAe,0BAAf;AACAS,EAAAA,KAAK,GAAGR,MAAM,CAACC,gBAAP,CAAwBK,EAAxB,EAA4BS,gBAA5B,CAA6CN,KAA7C,CAAR;AAEAL,EAAAA,IAAI,CAACY,IAAL,GAAYnB,aAAa,CAACO,IAAD,EAAOC,WAAP,CAAzB,GAA+CC,EAAE,CAACW,MAAH,EAA/C;AAEA,SAAQT,KAAK,KAAKU,SAAV,IAAuBV,KAAK,CAACE,MAAN,GAAe,CAAtC,IAA2CF,KAAK,KAAK,MAA7D;AACD","sourcesContent":["import { getBody } from './getBody.js';\nimport { setFakeBody } from './setFakeBody.js';\nimport { resetFakeBody } from './resetFakeBody.js';\n\nexport function has3DTransforms(tf){\n  if (!tf) { return false; }\n  if (!window.getComputedStyle) { return false; }\n  \n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      el = doc.createElement('p'),\n      has3d,\n      cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n\n  cssTF += 'transform';\n\n  // Add it to the body to get the computed style\n  body.insertBefore(el, null);\n\n  el.style[tf] = 'translate3d(1px,1px,1px)';\n  has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n\n  body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== \"none\");\n}\n"]},"metadata":{},"sourceType":"module"}